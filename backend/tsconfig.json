// {
//   // Visit https://aka.ms/tsconfig to read more about this file
//   "compilerOptions": {
//     // File Layout
//     // "rootDir": "./src",
//     // "outDir": "./dist",

//     // Environment Settings
//     // See also https://aka.ms/tsconfig/module
//     "module": "nodenext",
//     "moduleResolution": "NodeNext",
//     "target": "esnext",
//     "types": ["node"],
//     "allowImportingTsExtensions": true,
//     "noEmit": true,
//     // For nodejs:
//     // "lib": ["esnext"],
//     // "types": ["node"],
//     // and npm install -D @types/node

//     // Other Outputs
//     "sourceMap": true,
//     "declaration": true,
//     "declarationMap": true,

//     // Stricter Typechecking Options
//     "noUncheckedIndexedAccess": true,
//     "exactOptionalPropertyTypes": true,

//     // Style Options
//     // "noImplicitReturns": true,
//     // "noImplicitOverride": true,
//     // "noUnusedLocals": true,
//     // "noUnusedParameters": true,
//     // "noFallthroughCasesInSwitch": true,
//     // "noPropertyAccessFromIndexSignature": true,

//     // Recommended Options
//     "strict": true,
//     "jsx": "react-jsx",
//     "verbatimModuleSyntax": true,
//     "isolatedModules": true,
//     "noUncheckedSideEffectImports": true,
//     "moduleDetection": "force",
//     "skipLibCheck": true,
//   }
// }

{
  "compilerOptions": {
    // Environment Settings - See also https://aka.ms/tsconfig/module
    // File Layout
    // "rootDir": "./src", // Répertoire racine des fichiers source TS à compiler.
    "rootDir": ".", // Répertoire racine des fichiers source TS à compiler.
    "outDir": "./dist", // Répertoire de sortie des fichiers compilés.
    /* === Module System === */
    "target": "es2022", // Version ECMAScript de sortie : garantit la compatibilité avec Node 20+.
    "lib": ["es2022"], // Bibliothèques standard disponibles (sans DOM inutile sur un projet Node).
    "module": "nodenext", // Système de modules ESM natif pour Node.js (import/export modernes).
    "moduleResolution": "nodenext", // Résolution des modules : utilise la stratégie de résolution des modules ESM.
    "verbatimModuleSyntax": true, // (Option avancée) impose de conserver les extensions .js dans les imports
    // - nécessaire avec "nodenext" pour un build prod correct.

    /* === Compatibilité Node ESM === */
    "types": ["node"], // Inclut les types du runtime Node (fs, path, process, etc.).
    "esModuleInterop": true, // Permet d'importer facilement les modules CommonJS (ex: express, bcrypt).
    "allowSyntheticDefaultImports": true,// Autorise l'import par défaut sur des modules CJS sans export default explicite.

    /* === Compilation === */
    "noEmit": false, // compile pour prod : active la génération de JS (sinon TS n'analyse que les types).
    "sourceMap": true, // produit des fichiers .map pour le débogage (utile dans Docker et VSCode).
    "skipLibCheck": true, // Ignore la vérification de type dans node_modules (accélère la compilation).

    /* === Sécurité et style === */
    "strict": true,
    "noUncheckedIndexedAccess": true, // Interdit les variables non typées (force la rigueur dans les signatures).
    "exactOptionalPropertyTypes": true, // Fait respecter la différence entre "optionnel" et "undefined explicite".
    "isolatedModules": true, // chaque fichier doit être indépendant (utile avec ESM & outils comme esbuild/Vite).
    "moduleDetection": "force", // Force TypeScript à reconnaître tout fichier import/export comme un module TS.
    "noImplicitOverride": true, // Exige que toute méthode redéfinie soit marquée "override" (clarté en héritage).
    "noUncheckedSideEffectImports": true,// Avertit quand un import n’a d’effet que par exécution et non par export.
    "noImplicitAny": true,
  },
  "include": ["src/**/*.ts", "db/*.ts"], // Tous les fichiers TypeScript du dossier src et db sont inclus dans la compilation. ---------------------> modif ici
}